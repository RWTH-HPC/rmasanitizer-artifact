; ModuleID = '../../common/MPI_bail_out.c'
source_filename = "../../common/MPI_bail_out.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ompi_predefined_datatype_t = type opaque
%struct.ompi_predefined_op_t = type opaque
%struct.ompi_predefined_communicator_t = type opaque

@ompi_mpi_int = external global %struct.ompi_predefined_datatype_t, align 1
@ompi_mpi_op_max = external global %struct.ompi_predefined_op_t, align 1
@ompi_mpi_comm_world = external global %struct.ompi_predefined_communicator_t, align 1

; Function Attrs: nounwind uwtable
define dso_local void @bail_out(i32 noundef %0) local_unnamed_addr #0 !dbg !21 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !26, metadata !DIExpression()), !dbg !28
  store i32 %0, ptr %2, align 4, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #5, !dbg !33
  call void @llvm.dbg.value(metadata ptr %2, metadata !26, metadata !DIExpression(DW_OP_deref)), !dbg !28
  call void @llvm.dbg.value(metadata ptr %3, metadata !27, metadata !DIExpression(DW_OP_deref)), !dbg !28
  %4 = call i32 @MPI_Allreduce(ptr noundef nonnull %2, ptr noundef nonnull %3, i32 noundef 1, ptr noundef nonnull @ompi_mpi_int, ptr noundef nonnull @ompi_mpi_op_max, ptr noundef nonnull @ompi_mpi_comm_world) #5, !dbg !34
  %5 = load i32, ptr %3, align 4, !dbg !35, !tbaa !29
  call void @llvm.dbg.value(metadata i32 %5, metadata !27, metadata !DIExpression()), !dbg !28
  %6 = icmp eq i32 %5, 0, !dbg !37
  br i1 %6, label %9, label %7, !dbg !38

7:                                                ; preds = %1
  %8 = call i32 @MPI_Finalize() #5, !dbg !39
  call void @exit(i32 noundef 1) #6, !dbg !41
  unreachable, !dbg !41

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #5, !dbg !42
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

declare !dbg !43 i32 @MPI_Allreduce(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare !dbg !49 i32 @MPI_Finalize() local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare !dbg !52 void @exit(i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #4

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!14, !15, !16, !17, !18, !19}
!llvm.ident = !{!20}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 16.0.4 (https://github.com/flang-compiler/classic-flang-llvm-project/ 8d805dfcb66161beee81045a8ecd89051e919241)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "../../common/MPI_bail_out.c", directory: "/rwthfs/rz/cluster/home/ss540294/research/RMA_Codes/jube/benchmarks/PRK_stencil/PRK_stencil.benchmarks/000011/000003_compile_tsan/work/copy_source/MPIRMA/Stencil", checksumkind: CSK_MD5, checksum: "97c81b7e8d9fc455471171c9ce8cef48")
!2 = !{!3, !7, !8, !11}
!3 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPI_Datatype", file: !4, line: 424, baseType: !5)
!4 = !DIFile(filename: "/work/rwth1269/software/openmpi/4.1.6/include/mpi.h", directory: "", checksumkind: CSK_MD5, checksum: "1604d75d6543b0416c066a52a98f2659")
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!6 = !DICompositeType(tag: DW_TAG_structure_type, name: "ompi_datatype_t", file: !4, line: 424, flags: DIFlagFwdDecl)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPI_Op", file: !4, line: 429, baseType: !9)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DICompositeType(tag: DW_TAG_structure_type, name: "ompi_op_t", file: !4, line: 429, flags: DIFlagFwdDecl)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPI_Comm", file: !4, line: 423, baseType: !12)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "ompi_communicator_t", file: !4, line: 423, flags: DIFlagFwdDecl)
!14 = !{i32 7, !"Dwarf Version", i32 5}
!15 = !{i32 2, !"Debug Info Version", i32 3}
!16 = !{i32 1, !"wchar_size", i32 4}
!17 = !{i32 8, !"PIC Level", i32 2}
!18 = !{i32 7, !"PIE Level", i32 2}
!19 = !{i32 7, !"uwtable", i32 2}
!20 = !{!"clang version 16.0.4 (https://github.com/flang-compiler/classic-flang-llvm-project/ 8d805dfcb66161beee81045a8ecd89051e919241)"}
!21 = distinct !DISubprogram(name: "bail_out", scope: !1, file: !1, line: 53, type: !22, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !25)
!22 = !DISubroutineType(types: !23)
!23 = !{null, !24}
!24 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!25 = !{!26, !27}
!26 = !DILocalVariable(name: "error", arg: 1, scope: !21, file: !1, line: 53, type: !24)
!27 = !DILocalVariable(name: "error_tot", scope: !21, file: !1, line: 55, type: !24)
!28 = !DILocation(line: 0, scope: !21)
!29 = !{!30, !30, i64 0}
!30 = !{!"int", !31, i64 0}
!31 = !{!"omnipotent char", !32, i64 0}
!32 = !{!"Simple C/C++ TBAA"}
!33 = !DILocation(line: 55, column: 3, scope: !21)
!34 = !DILocation(line: 56, column: 3, scope: !21)
!35 = !DILocation(line: 57, column: 7, scope: !36)
!36 = distinct !DILexicalBlock(scope: !21, file: !1, line: 57, column: 7)
!37 = !DILocation(line: 57, column: 17, scope: !36)
!38 = !DILocation(line: 57, column: 7, scope: !21)
!39 = !DILocation(line: 61, column: 5, scope: !40)
!40 = distinct !DILexicalBlock(scope: !36, file: !1, line: 57, column: 23)
!41 = !DILocation(line: 62, column: 5, scope: !40)
!42 = !DILocation(line: 64, column: 1, scope: !21)
!43 = !DISubprogram(name: "MPI_Allreduce", scope: !4, file: !4, line: 1345, type: !44, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !48)
!44 = !DISubroutineType(types: !45)
!45 = !{!24, !46, !7, !24, !3, !8, !11}
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!48 = !{}
!49 = !DISubprogram(name: "MPI_Finalize", scope: !4, file: !4, line: 1574, type: !50, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !48)
!50 = !DISubroutineType(types: !51)
!51 = !{!24}
!52 = !DISubprogram(name: "exit", scope: !53, file: !53, line: 614, type: !22, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !48)
!53 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "d0b67d4c866748c04ac2b355c26c1c70")
