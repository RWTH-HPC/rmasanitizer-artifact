<?xml version="1.0" encoding="UTF-8"?>
<jube>  
  <include-path>
    <path>../../common</path>
    <path>../../platform/CLAIX-23</path>
  </include-path>

  <benchmark name="PRK Stencil SHMEM" outpath="PRK_stencil_shmem.benchmarks">
    <!-- 
      #Stencil Configuration Default
    -->     
    <parameterset name="config" tag="C|(!S+!M+!L)"> 
      <parameter name="num_iterations">1000</parameter>
      <parameter name="grid_size" mode="python" separator="!NONE!">__import__("math").ceil(__import__("math").sqrt(${application_tasks}/48)*48000)</parameter>
    </parameterset>

    <!-- Presets S, M, L -->
    <parameterset name="config" tag="S"> 
      <parameter name="num_iterations">10</parameter>
      <parameter name="grid_size" mode="python" separator="!NONE!">__import__("math").ceil(__import__("math").sqrt(${application_tasks}/48)*24000)</parameter>
    </parameterset>
    <parameterset name="config" tag="M"> 
      <parameter name="num_iterations">100</parameter>
      <parameter name="grid_size" mode="python" separator="!NONE!">__import__("math").ceil(__import__("math").sqrt(${application_tasks}/48)*12000)</parameter>
    </parameterset>
    <parameterset name="config" tag="L"> 
      <parameter name="num_iterations">1000</parameter>
      <parameter name="grid_size">36000</parameter>
    </parameterset>

    <!-- 
      source directory 
    -->  
    <parameterset name="source"  init_with="defaults.xml">
      <parameter name="path_to_source" type="string">${jube_benchmark_home}/prk/</parameter> <!-- - - - - - - - - - -  Path to the source folder       -->  
    </parameterset> 
    <!-- 
      #Fetching system settings       
      #Here you can add or change parameters to fit this specific benchmark
    -->
    <parameterset name="platform_specs_pset" init_with="system_settings.xml">  
      <parameter name="application_tasks" type="int" tag="!chameleon">48,96,192,384,768</parameter>         
      <parameter name="application_tasks" type="int" tag="chameleon">32</parameter>                
      <parameter name="taskspernode" type="int">48</parameter> <!-- - - - - - - - - - - - - - - - -  Tasks per node           -->  
      <parameter name="threads" type="int">1</parameter>       <!-- - - - - - - - - - - - - - - - -  Threads                -->
      <parameter name="timelimit">00:10:00</parameter>
      <parameter name="args_exec">$num_iterations $grid_size ${output_redirection}</parameter> 
    </parameterset>

    <parameterset name="execute_pset" init_with="system_settings.xml"></parameterset>  
    <parameterset name="toolchain_env_pset" init_with="system_settings.xml"></parameterset>
    <parameterset name="compile_pset" init_with="system_settings.xml">
      <parameter name="executable_name">stencil</parameter> <!-- - - - - - - - - - -  Name of the executable       --> 
      <parameter name="kernel_folder">Stencil</parameter>
      <!-- Change folder before compilation -->
      <parameter name="compile_preparation" type="string">cd SHMEM/${kernel_folder}</parameter> <!-- - - - - - - -  commands that have to be executed before compilation -->
      <parameter name="compile_target" type="string">$executable_name</parameter> <!-- - - - - - - -  Makefile target for compilation -->
      <parameter name="compile_env_vars"> <!-- Environment variables for compilation -->
      SHMEMCC="$MPICC -lsma" BARRIER_SYNCH=1
      </parameter>
    </parameterset>
    <parameterset name="module_env_pset" init_with="system_settings.xml"></parameterset>
    <parameterset name="mpirun_env_pset" init_with="system_settings.xml"></parameterset>
    <parameterset name="export_env_pset" init_with="system_settings.xml"></parameterset>

    <!-- MUST parametersets -->
    <parameterset name="must_config_pset" init_with="must.xml"></parameterset>
    <parameterset name="must_build_pset" init_with="must.xml"></parameterset>
    <parameterset name="must_compile_pset" init_with="must.xml"></parameterset>
    <parameterset name="must_execute_pset" init_with="must.xml"></parameterset>

    <!-- Regex patternsets -->
    <patternset name="pattern" init_with="defaults.xml:pattern">
      <pattern name="time" type="float">Total time \(s\): ${jube_pat_fp}</pattern>
      <pattern name="time_average" type="float">Avg time \(s\): ${jube_pat_fp}</pattern>
      <pattern name="rate" type="float">Rate \([^\s]*\): ${jube_pat_fp}</pattern>
    </patternset>
    <!-- Load filesets -->
    <fileset name="source_files" init_with="system_settings.xml"></fileset>
    <fileset name="job_files" init_with="system_settings.xml"></fileset> <!-- Slurm -->
    <!-- Load substituteset -->
    <substituteset name="job_sub" init_with="system_settings.xml"></substituteset> <!-- Slurm -->

    <!-- Load steps -->
    <include from="must.xml" path="step" /> <!-- Must -->
    <include from="defaults.xml" path="step" />
    <!-- Compile step -->
    <step name="compile" depend="copy_source">
      <include from="defaults.xml" path="compile_psets/use" suffix="${compile_mode}" />
      <!-- Compile executable -->
      <do active="${do_compile}">
        ${load_modules};         
        cd copy_source/;
        ${export}; 
        ${compile_export};
        <!-- COMPILE INSTRUCTIONS START -->
        cd SHMEM/${kernel_folder}
        make clean;
        $compile_env_vars make $compile_target;
        <!-- COMPILE INSTRUCTIONS END -->
        <!-- Caching executable -->
        mkdir -p ${benchmark_build_dir};
        mv -f ${executable_name} ${benchmark_build_dir}/${executable_full_name};  
      </do>      
      <!-- Copying cached executable -->
      <do>
        cp -f ${benchmark_build_dir}/${executable_full_name} .;
      </do>
    </step>
    <!-- Execute step -->
    <step name="execute" depend="compile" suffix="${compile_mode}_${measurement_mode}" active="not ${ignorelist}" iterations="1">
      <include from="defaults.xml" path="execute_psets/use" />
      <do done_file="${done_file}" error_file="${error_file}">
        $submit $submit_script
      </do>
    </step> 
    <!-- Load analyser -->
    <include from="defaults.xml" path="analyser"/>
    <!-- result -->
    <result>
      <use>analyse</use>
      <table name="result_csv" style="csv" separator=";" sort="tasks,compile_mode,measurement_mode,jube_wp_id">
        <include from="defaults.xml" path="columns/column" />
        <column title="num_iters">num_iterations</column>
        <column title="grid_size">grid_size</column>
        <column title="time_avg">time_avg</column>
        <column title="time_std">time_std</column>
        <column title="rate (MFlops/s)">rate_avg</column>
        <column title="memory total (MiB)" tag="memusage">memory_total</column>
        <column>verification</column>
      </table>
      <table name="result" style="pretty" sort="tasks,compile_mode,measurement_mode,jube_wp_id">
        <include from="defaults.xml" path="columns/column" />
        <column title="num_iters">num_iterations</column>
        <column title="grid_size">grid_size</column>
        <column format=".3f">time_avg</column>
        <column format=".3f">time_std</column>
        <column title="rate (MFlops/s)">rate_avg</column>
        <column title="memory total (MiB)" tag="memusage">memory_total</column>
        <column>verification</column>
      </table>
    </result>
    
    <!-- Use additional features -->
    <include from="includes.xml" path="includes/include"/>
  </benchmark>
</jube>