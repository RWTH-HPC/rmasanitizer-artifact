; ModuleID = '../../common/SHMEM_bail_out.c'
source_filename = "../../common/SHMEM_bail_out.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"PRK_ALIGNMENT\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [18 x i8] c"(a & (~a+1)) == a\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [37 x i8] c"../../include/par-res-kern_general.h\00", align 1, !dbg !12
@__PRETTY_FUNCTION__.prk_get_alignment = private unnamed_addr constant [28 x i8] c"int prk_get_alignment(void)\00", align 1, !dbg !17

; Function Attrs: nounwind uwtable
define dso_local void @bail_out(i32 noundef %0) local_unnamed_addr #0 !dbg !38 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !42, metadata !DIExpression()), !dbg !50
  %2 = tail call ptr @getenv(ptr noundef nonnull @.str) #7, !dbg !51
  call void @llvm.dbg.value(metadata ptr %2, metadata !56, metadata !DIExpression()), !dbg !59
  %3 = icmp eq ptr %2, null, !dbg !60
  br i1 %3, label %7, label %4, !dbg !61

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata ptr %2, metadata !62, metadata !DIExpression()), !dbg !69
  %5 = tail call i64 @strtol(ptr nocapture noundef nonnull %2, ptr noundef null, i32 noundef 10) #7, !dbg !71
  %6 = trunc i64 %5 to i32, !dbg !72
  br label %7, !dbg !61

7:                                                ; preds = %4, %1
  %8 = phi i32 [ %6, %4 ], [ 64, %1 ], !dbg !61
  call void @llvm.dbg.value(metadata i32 %8, metadata !57, metadata !DIExpression()), !dbg !59
  %9 = tail call i32 @llvm.smax.i32(i32 %8, i32 8), !dbg !73
  call void @llvm.dbg.value(metadata i32 %9, metadata !57, metadata !DIExpression()), !dbg !59
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9), !dbg !74, !range !77
  %11 = icmp ult i32 %10, 2, !dbg !74
  br i1 %11, label %13, label %12, !dbg !78

12:                                               ; preds = %7
  tail call void @__assert_fail(ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, i32 noundef 107, ptr noundef nonnull @__PRETTY_FUNCTION__.prk_get_alignment) #8, !dbg !74
  unreachable, !dbg !74

13:                                               ; preds = %7
  %14 = zext i32 %9 to i64, !dbg !79
  call void @llvm.dbg.value(metadata i64 %14, metadata !80, metadata !DIExpression()), !dbg !90
  call void @llvm.dbg.value(metadata i64 8, metadata !89, metadata !DIExpression()), !dbg !90
  %15 = tail call ptr @shmem_align(i64 noundef %14, i64 noundef 8) #7, !dbg !92
  call void @llvm.dbg.value(metadata ptr %15, metadata !43, metadata !DIExpression()), !dbg !50
  %16 = tail call ptr @getenv(ptr noundef nonnull @.str) #7, !dbg !93
  call void @llvm.dbg.value(metadata ptr %16, metadata !56, metadata !DIExpression()), !dbg !95
  %17 = icmp eq ptr %16, null, !dbg !96
  br i1 %17, label %21, label %18, !dbg !97

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata ptr %16, metadata !62, metadata !DIExpression()), !dbg !98
  %19 = tail call i64 @strtol(ptr nocapture noundef nonnull %16, ptr noundef null, i32 noundef 10) #7, !dbg !100
  %20 = trunc i64 %19 to i32, !dbg !101
  br label %21, !dbg !97

21:                                               ; preds = %18, %13
  %22 = phi i32 [ %20, %18 ], [ 64, %13 ], !dbg !97
  call void @llvm.dbg.value(metadata i32 %22, metadata !57, metadata !DIExpression()), !dbg !95
  %23 = tail call i32 @llvm.smax.i32(i32 %22, i32 8), !dbg !102
  call void @llvm.dbg.value(metadata i32 %23, metadata !57, metadata !DIExpression()), !dbg !95
  %24 = tail call i32 @llvm.ctpop.i32(i32 %23), !dbg !103, !range !77
  %25 = icmp ult i32 %24, 2, !dbg !103
  br i1 %25, label %27, label %26, !dbg !104

26:                                               ; preds = %21
  tail call void @__assert_fail(ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, i32 noundef 107, ptr noundef nonnull @__PRETTY_FUNCTION__.prk_get_alignment) #8, !dbg !103
  unreachable, !dbg !103

27:                                               ; preds = %21
  %28 = zext i32 %23 to i64, !dbg !105
  call void @llvm.dbg.value(metadata i64 %28, metadata !80, metadata !DIExpression()), !dbg !106
  call void @llvm.dbg.value(metadata i64 8, metadata !89, metadata !DIExpression()), !dbg !106
  %29 = tail call ptr @shmem_align(i64 noundef %28, i64 noundef 8) #7, !dbg !108
  call void @llvm.dbg.value(metadata ptr %29, metadata !46, metadata !DIExpression()), !dbg !50
  %30 = tail call ptr @getenv(ptr noundef nonnull @.str) #7, !dbg !109
  call void @llvm.dbg.value(metadata ptr %30, metadata !56, metadata !DIExpression()), !dbg !111
  %31 = icmp eq ptr %30, null, !dbg !112
  br i1 %31, label %35, label %32, !dbg !113

32:                                               ; preds = %27
  call void @llvm.dbg.value(metadata ptr %30, metadata !62, metadata !DIExpression()), !dbg !114
  %33 = tail call i64 @strtol(ptr nocapture noundef nonnull %30, ptr noundef null, i32 noundef 10) #7, !dbg !116
  %34 = trunc i64 %33 to i32, !dbg !117
  br label %35, !dbg !113

35:                                               ; preds = %32, %27
  %36 = phi i32 [ %34, %32 ], [ 64, %27 ], !dbg !113
  call void @llvm.dbg.value(metadata i32 %36, metadata !57, metadata !DIExpression()), !dbg !111
  %37 = tail call i32 @llvm.smax.i32(i32 %36, i32 8), !dbg !118
  call void @llvm.dbg.value(metadata i32 %37, metadata !57, metadata !DIExpression()), !dbg !111
  %38 = tail call i32 @llvm.ctpop.i32(i32 %37), !dbg !119, !range !77
  %39 = icmp ult i32 %38, 2, !dbg !119
  br i1 %39, label %41, label %40, !dbg !120

40:                                               ; preds = %35
  tail call void @__assert_fail(ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, i32 noundef 107, ptr noundef nonnull @__PRETTY_FUNCTION__.prk_get_alignment) #8, !dbg !119
  unreachable, !dbg !119

41:                                               ; preds = %35
  %42 = zext i32 %37 to i64, !dbg !121
  call void @llvm.dbg.value(metadata i64 %42, metadata !80, metadata !DIExpression()), !dbg !122
  call void @llvm.dbg.value(metadata i64 8, metadata !89, metadata !DIExpression()), !dbg !122
  %43 = tail call ptr @shmem_align(i64 noundef %42, i64 noundef 8) #7, !dbg !124
  call void @llvm.dbg.value(metadata ptr %43, metadata !47, metadata !DIExpression()), !dbg !50
  %44 = tail call ptr @getenv(ptr noundef nonnull @.str) #7, !dbg !125
  call void @llvm.dbg.value(metadata ptr %44, metadata !56, metadata !DIExpression()), !dbg !127
  %45 = icmp eq ptr %44, null, !dbg !128
  br i1 %45, label %49, label %46, !dbg !129

46:                                               ; preds = %41
  call void @llvm.dbg.value(metadata ptr %44, metadata !62, metadata !DIExpression()), !dbg !130
  %47 = tail call i64 @strtol(ptr nocapture noundef nonnull %44, ptr noundef null, i32 noundef 10) #7, !dbg !132
  %48 = trunc i64 %47 to i32, !dbg !133
  br label %49, !dbg !129

49:                                               ; preds = %46, %41
  %50 = phi i32 [ %48, %46 ], [ 64, %41 ], !dbg !129
  call void @llvm.dbg.value(metadata i32 %50, metadata !57, metadata !DIExpression()), !dbg !127
  %51 = tail call i32 @llvm.smax.i32(i32 %50, i32 8), !dbg !134
  call void @llvm.dbg.value(metadata i32 %51, metadata !57, metadata !DIExpression()), !dbg !127
  %52 = tail call i32 @llvm.ctpop.i32(i32 %51), !dbg !135, !range !77
  %53 = icmp ult i32 %52, 2, !dbg !135
  br i1 %53, label %55, label %54, !dbg !136

54:                                               ; preds = %49
  tail call void @__assert_fail(ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2, i32 noundef 107, ptr noundef nonnull @__PRETTY_FUNCTION__.prk_get_alignment) #8, !dbg !135
  unreachable, !dbg !135

55:                                               ; preds = %49
  %56 = zext i32 %51 to i64, !dbg !137
  call void @llvm.dbg.value(metadata i64 %56, metadata !80, metadata !DIExpression()), !dbg !138
  call void @llvm.dbg.value(metadata i64 280, metadata !89, metadata !DIExpression()), !dbg !138
  %57 = tail call ptr @shmem_align(i64 noundef %56, i64 noundef 280) #7, !dbg !140
  call void @llvm.dbg.value(metadata ptr %57, metadata !48, metadata !DIExpression()), !dbg !50
  call void @llvm.dbg.value(metadata i32 0, metadata !49, metadata !DIExpression()), !dbg !50
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(280) %57, i8 0, i64 280, i1 false), !dbg !141, !tbaa !145
  call void @llvm.dbg.value(metadata i64 poison, metadata !49, metadata !DIExpression()), !dbg !50
  %58 = sext i32 %0 to i64, !dbg !149
  store i64 %58, ptr %29, align 8, !dbg !150, !tbaa !145
  tail call void @shmem_barrier_all() #7, !dbg !151
  %59 = tail call i32 @shmem_n_pes() #7, !dbg !152
  tail call void @shmem_long_max_to_all(ptr noundef %15, ptr noundef nonnull %29, i32 noundef 1, i32 noundef 0, i32 noundef 0, i32 noundef %59, ptr noundef %43, ptr noundef %57) #7, !dbg !156
  %60 = load i64, ptr %15, align 8, !dbg !157, !tbaa !145
  %61 = icmp sgt i64 %60, 0, !dbg !159
  br i1 %61, label %62, label %63, !dbg !160

62:                                               ; preds = %55
  tail call fastcc void @prk_shmem_finalize(), !dbg !161
  tail call void @exit(i32 noundef 1) #8, !dbg !163
  unreachable, !dbg !163

63:                                               ; preds = %55
  ret void, !dbg !164
}

declare !dbg !165 void @shmem_barrier_all() local_unnamed_addr #1

declare !dbg !169 void @shmem_long_max_to_all(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @prk_shmem_finalize() unnamed_addr #0 !dbg !174 {
  tail call void @shmem_finalize() #7, !dbg !175
  ret void, !dbg !176
}

; Function Attrs: noreturn nounwind
declare !dbg !177 void @exit(i32 noundef) local_unnamed_addr #2

declare !dbg !178 ptr @shmem_align(i64 noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind memory(read)
declare !dbg !179 noundef ptr @getenv(ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare !dbg !182 void @__assert_fail(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn
declare !dbg !187 i64 @strtol(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #4

declare !dbg !192 i32 @shmem_n_pes() local_unnamed_addr #1

declare !dbg !193 void @shmem_finalize() local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.ctpop.i32(i32) #5

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nofree nounwind memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.dbg.cu = !{!23}
!llvm.module.flags = !{!31, !32, !33, !34, !35, !36}
!llvm.ident = !{!37}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 104, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "../../include/par-res-kern_general.h", directory: "/rwthfs/rz/cluster/home/ss540294/research/RMA_Codes/jube/benchmarks/PRK_stencil_shmem/PRK_stencil_shmem.benchmarks/000065/000004_compile/work/copy_source/SHMEM/Stencil", checksumkind: CSK_MD5, checksum: "09b1294cb0ec81675a544e0b6811862a")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 112, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 14)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 107, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 18)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 107, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 296, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 37)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !2, line: 107, type: !19, isLocal: true, isDefinition: true)
!19 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 224, elements: !21)
!20 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!21 = !{!22}
!22 = !DISubrange(count: 28)
!23 = distinct !DICompileUnit(language: DW_LANG_C11, file: !24, producer: "clang version 16.0.4 (https://github.com/flang-compiler/classic-flang-llvm-project/ 8d805dfcb66161beee81045a8ecd89051e919241)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !25, globals: !30, splitDebugInlining: false, nameTableKind: None)
!24 = !DIFile(filename: "../../common/SHMEM_bail_out.c", directory: "/rwthfs/rz/cluster/home/ss540294/research/RMA_Codes/jube/benchmarks/PRK_stencil_shmem/PRK_stencil_shmem.benchmarks/000065/000004_compile/work/copy_source/SHMEM/Stencil", checksumkind: CSK_MD5, checksum: "01e2b0cad7979473710555ea9ab15dbd")
!25 = !{!26, !27, !28}
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!27 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!30 = !{!0, !7, !12, !17}
!31 = !{i32 7, !"Dwarf Version", i32 5}
!32 = !{i32 2, !"Debug Info Version", i32 3}
!33 = !{i32 1, !"wchar_size", i32 4}
!34 = !{i32 8, !"PIC Level", i32 2}
!35 = !{i32 7, !"PIE Level", i32 2}
!36 = !{i32 7, !"uwtable", i32 2}
!37 = !{!"clang version 16.0.4 (https://github.com/flang-compiler/classic-flang-llvm-project/ 8d805dfcb66161beee81045a8ecd89051e919241)"}
!38 = distinct !DISubprogram(name: "bail_out", scope: !24, file: !24, line: 52, type: !39, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !23, retainedNodes: !41)
!39 = !DISubroutineType(types: !40)
!40 = !{null, !27}
!41 = !{!42, !43, !46, !47, !48, !49}
!42 = !DILocalVariable(name: "error", arg: 1, scope: !38, file: !24, line: 52, type: !27)
!43 = !DILocalVariable(name: "global_error", scope: !38, file: !24, line: 53, type: !44)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!45 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!46 = !DILocalVariable(name: "local_error", scope: !38, file: !24, line: 54, type: !44)
!47 = !DILocalVariable(name: "pWrk", scope: !38, file: !24, line: 55, type: !44)
!48 = !DILocalVariable(name: "pSync_local", scope: !38, file: !24, line: 56, type: !44)
!49 = !DILocalVariable(name: "i", scope: !38, file: !24, line: 58, type: !27)
!50 = !DILocation(line: 0, scope: !38)
!51 = !DILocation(line: 104, column: 18, scope: !52, inlinedAt: !58)
!52 = distinct !DISubprogram(name: "prk_get_alignment", scope: !2, file: !2, line: 98, type: !53, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !23, retainedNodes: !55)
!53 = !DISubroutineType(types: !54)
!54 = !{!27}
!55 = !{!56, !57}
!56 = !DILocalVariable(name: "temp", scope: !52, file: !2, line: 104, type: !29)
!57 = !DILocalVariable(name: "a", scope: !52, file: !2, line: 105, type: !27)
!58 = distinct !DILocation(line: 59, column: 35, scope: !38)
!59 = !DILocation(line: 0, scope: !52, inlinedAt: !58)
!60 = !DILocation(line: 105, column: 18, scope: !52, inlinedAt: !58)
!61 = !DILocation(line: 105, column: 13, scope: !52, inlinedAt: !58)
!62 = !DILocalVariable(name: "__nptr", arg: 1, scope: !63, file: !64, line: 361, type: !67)
!63 = distinct !DISubprogram(name: "atoi", scope: !64, file: !64, line: 361, type: !65, scopeLine: 362, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !23, retainedNodes: !68)
!64 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "d0b67d4c866748c04ac2b355c26c1c70")
!65 = !DISubroutineType(types: !66)
!66 = !{!27, !67}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!68 = !{!62}
!69 = !DILocation(line: 0, scope: !63, inlinedAt: !70)
!70 = distinct !DILocation(line: 105, column: 28, scope: !52, inlinedAt: !58)
!71 = !DILocation(line: 363, column: 16, scope: !63, inlinedAt: !70)
!72 = !DILocation(line: 363, column: 10, scope: !63, inlinedAt: !70)
!73 = !DILocation(line: 106, column: 9, scope: !52, inlinedAt: !58)
!74 = !DILocation(line: 107, column: 5, scope: !75, inlinedAt: !58)
!75 = distinct !DILexicalBlock(scope: !76, file: !2, line: 107, column: 5)
!76 = distinct !DILexicalBlock(scope: !52, file: !2, line: 107, column: 5)
!77 = !{i32 0, i32 32}
!78 = !DILocation(line: 107, column: 5, scope: !76, inlinedAt: !58)
!79 = !DILocation(line: 59, column: 35, scope: !38)
!80 = !DILocalVariable(name: "alignment", arg: 1, scope: !81, file: !82, line: 106, type: !85)
!81 = distinct !DISubprogram(name: "prk_shmem_align", scope: !82, file: !82, line: 106, type: !83, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !23, retainedNodes: !88)
!82 = !DIFile(filename: "../../include/par-res-kern_shmem.h", directory: "/rwthfs/rz/cluster/home/ss540294/research/RMA_Codes/jube/benchmarks/PRK_stencil_shmem/PRK_stencil_shmem.benchmarks/000065/000004_compile/work/copy_source/SHMEM/Stencil", checksumkind: CSK_MD5, checksum: "9b33ce80d010605bf22507375b48197e")
!83 = !DISubroutineType(types: !84)
!84 = !{!26, !85, !85}
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !86, line: 46, baseType: !87)
!86 = !DIFile(filename: "work/rwth1269/software/c23/classic-flang/lib/clang/16/include/stddef.h", directory: "/rwthfs/rz/cluster", checksumkind: CSK_MD5, checksum: "f95079da609b0e8f201cb8136304bf3b")
!87 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!88 = !{!80, !89}
!89 = !DILocalVariable(name: "size", arg: 2, scope: !81, file: !82, line: 106, type: !85)
!90 = !DILocation(line: 0, scope: !81, inlinedAt: !91)
!91 = distinct !DILocation(line: 59, column: 19, scope: !38)
!92 = !DILocation(line: 108, column: 12, scope: !81, inlinedAt: !91)
!93 = !DILocation(line: 104, column: 18, scope: !52, inlinedAt: !94)
!94 = distinct !DILocation(line: 60, column: 34, scope: !38)
!95 = !DILocation(line: 0, scope: !52, inlinedAt: !94)
!96 = !DILocation(line: 105, column: 18, scope: !52, inlinedAt: !94)
!97 = !DILocation(line: 105, column: 13, scope: !52, inlinedAt: !94)
!98 = !DILocation(line: 0, scope: !63, inlinedAt: !99)
!99 = distinct !DILocation(line: 105, column: 28, scope: !52, inlinedAt: !94)
!100 = !DILocation(line: 363, column: 16, scope: !63, inlinedAt: !99)
!101 = !DILocation(line: 363, column: 10, scope: !63, inlinedAt: !99)
!102 = !DILocation(line: 106, column: 9, scope: !52, inlinedAt: !94)
!103 = !DILocation(line: 107, column: 5, scope: !75, inlinedAt: !94)
!104 = !DILocation(line: 107, column: 5, scope: !76, inlinedAt: !94)
!105 = !DILocation(line: 60, column: 34, scope: !38)
!106 = !DILocation(line: 0, scope: !81, inlinedAt: !107)
!107 = distinct !DILocation(line: 60, column: 18, scope: !38)
!108 = !DILocation(line: 108, column: 12, scope: !81, inlinedAt: !107)
!109 = !DILocation(line: 104, column: 18, scope: !52, inlinedAt: !110)
!110 = distinct !DILocation(line: 61, column: 27, scope: !38)
!111 = !DILocation(line: 0, scope: !52, inlinedAt: !110)
!112 = !DILocation(line: 105, column: 18, scope: !52, inlinedAt: !110)
!113 = !DILocation(line: 105, column: 13, scope: !52, inlinedAt: !110)
!114 = !DILocation(line: 0, scope: !63, inlinedAt: !115)
!115 = distinct !DILocation(line: 105, column: 28, scope: !52, inlinedAt: !110)
!116 = !DILocation(line: 363, column: 16, scope: !63, inlinedAt: !115)
!117 = !DILocation(line: 363, column: 10, scope: !63, inlinedAt: !115)
!118 = !DILocation(line: 106, column: 9, scope: !52, inlinedAt: !110)
!119 = !DILocation(line: 107, column: 5, scope: !75, inlinedAt: !110)
!120 = !DILocation(line: 107, column: 5, scope: !76, inlinedAt: !110)
!121 = !DILocation(line: 61, column: 27, scope: !38)
!122 = !DILocation(line: 0, scope: !81, inlinedAt: !123)
!123 = distinct !DILocation(line: 61, column: 11, scope: !38)
!124 = !DILocation(line: 108, column: 12, scope: !81, inlinedAt: !123)
!125 = !DILocation(line: 104, column: 18, scope: !52, inlinedAt: !126)
!126 = distinct !DILocation(line: 62, column: 34, scope: !38)
!127 = !DILocation(line: 0, scope: !52, inlinedAt: !126)
!128 = !DILocation(line: 105, column: 18, scope: !52, inlinedAt: !126)
!129 = !DILocation(line: 105, column: 13, scope: !52, inlinedAt: !126)
!130 = !DILocation(line: 0, scope: !63, inlinedAt: !131)
!131 = distinct !DILocation(line: 105, column: 28, scope: !52, inlinedAt: !126)
!132 = !DILocation(line: 363, column: 16, scope: !63, inlinedAt: !131)
!133 = !DILocation(line: 363, column: 10, scope: !63, inlinedAt: !131)
!134 = !DILocation(line: 106, column: 9, scope: !52, inlinedAt: !126)
!135 = !DILocation(line: 107, column: 5, scope: !75, inlinedAt: !126)
!136 = !DILocation(line: 107, column: 5, scope: !76, inlinedAt: !126)
!137 = !DILocation(line: 62, column: 34, scope: !38)
!138 = !DILocation(line: 0, scope: !81, inlinedAt: !139)
!139 = distinct !DILocation(line: 62, column: 18, scope: !38)
!140 = !DILocation(line: 108, column: 12, scope: !81, inlinedAt: !139)
!141 = !DILocation(line: 64, column: 20, scope: !142)
!142 = distinct !DILexicalBlock(scope: !143, file: !24, line: 63, column: 56)
!143 = distinct !DILexicalBlock(scope: !144, file: !24, line: 63, column: 4)
!144 = distinct !DILexicalBlock(scope: !38, file: !24, line: 63, column: 4)
!145 = !{!146, !146, i64 0}
!146 = !{!"long", !147, i64 0}
!147 = !{!"omnipotent char", !148, i64 0}
!148 = !{!"Simple C/C++ TBAA"}
!149 = !DILocation(line: 66, column: 22, scope: !38)
!150 = !DILocation(line: 66, column: 20, scope: !38)
!151 = !DILocation(line: 67, column: 4, scope: !38)
!152 = !DILocation(line: 79, column: 12, scope: !153, inlinedAt: !155)
!153 = distinct !DISubprogram(name: "prk_shmem_n_pes", scope: !82, file: !82, line: 77, type: !53, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !23, retainedNodes: !154)
!154 = !{}
!155 = distinct !DILocation(line: 68, column: 63, scope: !38)
!156 = !DILocation(line: 68, column: 4, scope: !38)
!157 = !DILocation(line: 69, column: 8, scope: !158)
!158 = distinct !DILexicalBlock(scope: !38, file: !24, line: 69, column: 8)
!159 = !DILocation(line: 69, column: 25, scope: !158)
!160 = !DILocation(line: 69, column: 8, scope: !38)
!161 = !DILocation(line: 70, column: 6, scope: !162)
!162 = distinct !DILexicalBlock(scope: !158, file: !24, line: 69, column: 30)
!163 = !DILocation(line: 71, column: 6, scope: !162)
!164 = !DILocation(line: 74, column: 1, scope: !38)
!165 = !DISubprogram(name: "shmem_barrier_all", scope: !166, file: !166, line: 1383, type: !167, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !154)
!166 = !DIFile(filename: "/work/rwth1269/software/sos/1.5.2-ompi/include/shmem.h", directory: "", checksumkind: CSK_MD5, checksum: "84e74499ad7546bdfcfa7c895de12762")
!167 = !DISubroutineType(types: !168)
!168 = !{null}
!169 = !DISubprogram(name: "shmem_long_max_to_all", scope: !166, file: !166, line: 1497, type: !170, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !154)
!170 = !DISubroutineType(types: !171)
!171 = !{null, !44, !172, !27, !27, !27, !27, !44, !44}
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !45)
!174 = distinct !DISubprogram(name: "prk_shmem_finalize", scope: !82, file: !82, line: 59, type: !167, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !23, retainedNodes: !154)
!175 = !DILocation(line: 61, column: 5, scope: !174)
!176 = !DILocation(line: 67, column: 1, scope: !174)
!177 = !DISubprogram(name: "exit", scope: !64, file: !64, line: 614, type: !39, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !154)
!178 = !DISubprogram(name: "shmem_align", scope: !166, file: !166, line: 80, type: !83, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !154)
!179 = !DISubprogram(name: "getenv", scope: !64, file: !64, line: 631, type: !180, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !154)
!180 = !DISubroutineType(types: !181)
!181 = !{!29, !67}
!182 = !DISubprogram(name: "__assert_fail", scope: !183, file: !183, line: 67, type: !184, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !154)
!183 = !DIFile(filename: "/usr/include/assert.h", directory: "", checksumkind: CSK_MD5, checksum: "128cb82a746872445f59644e097e9f2b")
!184 = !DISubroutineType(types: !185)
!185 = !{null, !67, !67, !186, !67}
!186 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!187 = !DISubprogram(name: "strtol", scope: !64, file: !64, line: 176, type: !188, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !154)
!188 = !DISubroutineType(types: !189)
!189 = !{!45, !190, !191, !27}
!190 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !67)
!191 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !28)
!192 = !DISubprogram(name: "shmem_n_pes", scope: !166, file: !166, line: 55, type: !53, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !154)
!193 = !DISubprogram(name: "shmem_finalize", scope: !166, file: !166, line: 54, type: !167, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !154)
