diff --git a/src/collectives_f.c4 b/src/collectives_f.c4
index 39270601..ed732007 100644
--- a/src/collectives_f.c4
+++ b/src/collectives_f.c4
@@ -42,7 +42,7 @@ FC_SHMEM_BARRIER_ALL(void)
 {
     SHMEM_ERR_CHECK_INITIALIZED();
 
-    shmem_internal_barrier_all();
+    shmem_barrier_all();
 }
 
 
diff --git a/src/data_f.c4 b/src/data_f.c4
index 5753463d..c3fcac7e 100644
--- a/src/data_f.c4
+++ b/src/data_f.c4
@@ -135,7 +135,7 @@ SHMEM_BIND_F_SIZES(`SHMEM_WRAP_FC_IPUT_SIZE')
         SHMEM_ERR_CHECK_SYMMETRIC(source, SIZE * *len);                 \
         SHMEM_ERR_CHECK_NULL(target, *len);                             \
                                                                         \
-        shmem_internal_get(SHMEM_CTX_DEFAULT, target, source,           \
+        shmem_getmem(target, source,                                    \
                            SIZE * *len, *pe);                           \
         shmem_internal_get_wait(SHMEM_CTX_DEFAULT);                     \
     }
diff --git a/src/init_f.c b/src/init_f.c
index 9822549b..4310c0c5 100644
--- a/src/init_f.c
+++ b/src/init_f.c
@@ -30,7 +30,7 @@ FC_START_PES(fortran_integer_t *npes)
         RAISE_ERROR_STR("attempt to reinitialize library");
     }
 
-    shmem_internal_start_pes(*npes);
+    shmem_init();
 }
 
 
@@ -45,7 +45,7 @@ FC_SHMEM_INIT(void)
         RAISE_ERROR_STR("attempt to reinitialize library");
     }
 
-    shmem_internal_init(SHMEM_THREAD_SINGLE, &tl_provided);
+    shmem_init();
 }
 
 
@@ -56,7 +56,7 @@ FC_SHMEM_GLOBAL_EXIT(fortran_integer_t *status)
 {
     SHMEM_ERR_CHECK_INITIALIZED();
 
-    shmem_internal_global_exit(*status);
+    shmem_finalize();
 }
 
 
@@ -67,7 +67,7 @@ FC_SHMEM_FINALIZE(void)
 {
     SHMEM_ERR_CHECK_INITIALIZED();
 
-    shmem_internal_finalize();
+    shmem_finalize();
 }
 
 
diff --git a/src/runtime-mpi.c b/src/runtime-mpi.c
index 3713ec3f..0ddc3bfb 100644
--- a/src/runtime-mpi.c
+++ b/src/runtime-mpi.c
@@ -79,7 +79,7 @@ shmem_runtime_init(int enable_node_ranks)
         if (MPI_SUCCESS != MPI_Init_thread(NULL, NULL, mpi_thread_level, &provided)) {
             return 3;
         }
-        if (provided != mpi_thread_level) {
+        if (provided < mpi_thread_level) {
             RETURN_ERROR_MSG("MPI init with thread level '%s' returned %d, required %d\n",
                              shmem_internal_params.MPI_THREAD_LEVEL,
                              provided, mpi_thread_level);
-- 
2.39.3

